name: Pullrequest Build

on:
  pull_request:
    types:
      - opened
    branches:
      - 'dev'
    paths:
      - 'src/**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  lint:
    name: Lint Code Base
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/
          key: ${{ runner.os }}-pip
          restore-keys: |
            ${{ runner.os }}-pip

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Packages
        run: |
          python -m pip install --upgrade pip
          python -m pip install black isort autoflake autopep8

      - name: Lint
        run: |
          autopep8 src --recursive --select=E111,E112,E117,E225,E302,E501,E901 --in-place
          autoflake --in-place --remove-all-unused-imports --remove-unused-variables --exclude=__init__.py -r .
          isort . --ws
          black .

      - name: Pip requirements
        run: |
          pip install pipreqs
          pipreqs --force src/

      - name: Commit Style Fixes
        id: auto-commit
        uses: stefanzweifel/git-auto-commit-action@v6
        with:
          commit_message: 'Style fixes'
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}

      - name: Set Output Commit Hash
        run: echo "commit_hash=steps.auto-commit.outputs.commit_hash" >> $GITHUB_ENV

  build-server:
    name: Build Server
    needs: [lint]
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILD_SUMMARY: False
      DOCKER_BUILD_RECORD_UPLOAD: False
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.10.0

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx
          restore-keys: |
            ${{ runner.os }}-buildx

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          platforms: linux/amd64
          #platforms: linux/amd64,linux/arm64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
